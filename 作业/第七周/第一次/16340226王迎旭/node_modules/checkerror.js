//插入显示错误的信息
var ERR_STRs = 
{
    usernameErr:    '字母开头的6~18位英文字母、数字或_',
    idErr:          '8位数字，且不能以0开头',
    telErr:         '11位数字，且不能以0开头',
    emailErr:       '邮箱不合要求'
} 
//插入提示信息
var EXI_STRs = 
{
    usernameErr:    '用户名已存在',
    idErr:          '学号已存在',
    telErr:         '电话已存在',
    emailErr:       '邮箱已存在'
};
//使用正则表达式验证匹配是否合法
function check(param) 
{
    var err = 
    {
        code: 0,
        usernameErr: false,
        idErr: false,
        telErr: false,
        emailErr: false
    };
    //判断用户名是否满足字母加数字（不在开头）加下划线的形式
    if (!param.username.match(/^[a-zA-Z][a-zA-Z0-9_]{5,17}$/)) 
    {
        err.code += 1;
        err.usernameErr = true;
    }
    //判断学号是否满足16340226这种格式且第一位不为0
    if (!param.id.match(/^[1-9][0-9]{7}$/)) 
    {
        err.code += 2;
        err.idErr = true;
    }
    //判断是否满足类似于15633334444这种电话号码且第一位不为0
    if (!param.tel.match(/^[1-9][0-9]{10}$/)) 
    {
        err.code += 4;
        err.telErr = true;
    }
    //判断邮箱是否满足类似于469410930@qq.com或者wyxwyx46@qq.com
    if (!param.email.match(/^[0-9a-zA-Z_\-]+(\.[0-9a-zA-Z_\-]+)*@([0-9a-zA-Z_\-]+\.)+[a-zA-Z]{2,4}$/)) 
    {
        err.code += 8;
        err.emailErr = true;
    }
    return err;
}
//使用模块传递该文件中的所有可用参数以及函数
exports.check = check;
exports.ERR_STRs = ERR_STRs;
exports.EXI_STRs = EXI_STRs;